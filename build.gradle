import com.hierynomus.gradle.license.tasks.LicenseFormat

import java.time.Year

plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.freefair.javadoc-links' version '6.5.1'
    id 'com.github.hierynomus.license' version "0.16.1"
}

defaultTasks 'clean', 'build'

def projGroup = 'org.fix4j'
def projName = 'fix4j-sbe'
def projVersion = file('version.txt').text.trim()

def agronaVersion = '1.17.1'
def sbeToolVersion = '1.27.0'
def junitVersion = '4.13.2'
def hdrHistogramVersion = '2.1.12'

def generatedSrc = "$buildDir/generated-src"
def validationXsdPath = projectDir.toString() + '/src/main/resources/sbe.xsd'

group = projGroup
version = projVersion

ext {
    //gradle clean build publish -PossrhUsername=mterzer -PossrhPassword=xxx

    isReleaseVersion = !projVersion.endsWith('-SNAPSHOT')
    releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'

    println name + " version=" + projVersion + " release=" + isReleaseVersion

    if (!project.hasProperty('ossrhUsername')) {
        ossrhUsername = ''
    }

    if (!project.hasProperty('ossrhPassword')) {
        ossrhPassword = ''
    }
}

def projectPom = {
    name = "$projName"
    packaging = 'pom'
    description = 'User friendly implementation of the simple binary encoding standard'
    url = 'https://github.com/tools4j/tools4j-sbe'

    scm {
        connection = 'scm:git:https://github.com/tools4j/tools4j-sbe.git'
        developerConnection = 'scm:git:https://github.com/tools4j/tools4j-sbe.git'
        url = 'https://github.com/tools4j/tools4j-sbe.git'
    }

    licenses {
        license {
            name = 'The MIT License (MIT)'
            url = 'https://opensource.org/licenses/MIT'
        }
    }

    developers {
        developer {
            id = 'terzerm'
            name = 'Marco Terzer'
            email = 'terzerm@gmail.com'
            url = 'https://github.com/terzerm'
        }
        developer {
            id = 'anton-anufriev'
            name = 'Antun Anufriev'
            email = 'anufriev@gmail.com'
            url = 'https://github.com/anton-anufriev'
        }
    }
}

sourceSets.main.java {
    srcDirs += generatedSrc
}
sourceSets.main.resources {
//    srcDirs += generatedSrc
    exclude '**/*.template'
    exclude '**/codegen/**'
}

repositories {
    mavenCentral()
}

configurations {
    sbeTool
}

dependencies {
    api "org.agrona:agrona:${agronaVersion}"
    sbeTool "uk.co.real-logic:sbe-tool:${sbeToolVersion}"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.hdrhistogram:HdrHistogram:${hdrHistogramVersion}"
}

task generateCodecs(type: JavaExec) {
    main = 'uk.co.real_logic.sbe.SbeTool'
    classpath = configurations.sbeTool
    systemProperties(
            'sbe.output.dir': 'build/generated-src',
            'sbe.target.language': 'Java',
            'sbe.java.generate.interfaces': 'true',
            'sbe.decode.unknown.enum.values': 'true',
            'sbe.validation.stop.on.error': 'true',
            'sbe.xinclude.aware': 'true',
            'sbe.validation.xsd': validationXsdPath)
    args = ['src/test/resources/example-schema.xml', 'src/test/resources/trading-schema.xml']
}

task copyLicense(type: Copy) {
    from('.')
    into('build/resources/main/LICENSE.txt')
    include('LICENSE.md')
    rename('LICENSE.md', 'LICENSE.txt')
}
task copyLicenseToSrc(type: Copy) {
    from('build/resources/main/')
    into('build/generated-src/LICENSE.txt')
    include('LICENSE.txt')
}

license {
    header rootProject.file('etc/LICENSE.template')
    strictCheck true
    include "org/fix4j/sbe/**/*.java"
    ext.year = Year.now().value
    mapping {
        java='SLASHSTAR_STYLE'
    }
}

task licenseFormatGen(type: LicenseFormat) {
    source = generatedSrc
}

licenseFormatGen.dependsOn generateCodecs
copyLicenseToSrc.dependsOn copyLicense
compileJava.dependsOn generateCodecs,licenseFormatGen,licenseFormat
processResources.dependsOn copyLicense,copyLicenseToSrc

javadoc {
	options.showFromPackage()
	options.linkSource()
	options.links("http://docs.oracle.com/javase/8/docs/api/")
	options.windowTitle("${projName} API ${version}")
           .docTitle("${projName} API ${version}")
	options.overview = "src/main/resources/overview.html"
}

task javadocJar(type: Jar) {
//    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
//    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        fix4jSbe(MavenPublication) {
            from components.java
            pom(projectPom)
        }
    }

    repositories {
        maven {
            url = !isReleaseVersion ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.fix4jSbe
}
